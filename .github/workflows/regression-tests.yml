name: Regression Tests

on:
  deployment_status:
    states: ['success']

env:
  VERCEL_PROTECTION_BYPASS: ${{ secrets.VERCEL_AUTOMATION_BYPASS_SECRET }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.deployment_status.target_url }}
  cancel-in-progress: true

jobs:
  unlighthouse-audit:
    if: ${{ contains(fromJson('["Production – catalyst-canary", "Preview – catalyst-canary"]'), github.event.deployment_status.environment) }}
    name: Unlighthouse Audit - ${{ matrix.device }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: [desktop, mobile]
    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.deployment_status.target_url }}-${{ github.job }}-${{ matrix.device }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: npm install @unlighthouse/cli puppeteer -g

      - name: Unlighthouse audit on ${{ matrix.device }}
        run: unlighthouse-ci --site ${{ github.event.deployment_status.target_url }} --${{ matrix.device }} --disable-robots-txt --extra-headers x-vercel-protection-bypass=$VERCEL_PROTECTION_BYPASS,x-vercel-set-bypass-cookie=true

      - name: Upload ${{ matrix.device }} audit
        if: failure() || success()
        uses: actions/upload-artifact@v4
        with:
          name: unlighthouse-${{ matrix.device }}-report
          path: './.unlighthouse/'
          include-hidden-files: 'true'

  ui-tests:
    name: Playwright UI Tests
    runs-on: ubuntu-latest
    if: ${{ contains(fromJson('["Production – catalyst-canary", "Preview – catalyst-canary"]'), github.event.deployment_status.environment) }}
    env:
      BIGCOMMERCE_ACCESS_TOKEN: ${{ secrets.BIGCOMMERCE_ACCESS_TOKEN }}
      BIGCOMMERCE_CHANNEL_ID: ${{ secrets.BIGCOMMERCE_CHANNEL_ID }}
      BIGCOMMERCE_STORE_HASH: ${{ secrets.BIGCOMMERCE_STORE_HASH }}
      BIGCOMMERCE_CLIENT_ID: ${{ secrets.BIGCOMMERCE_CLIENT_ID }}
      BIGCOMMERCE_CLIENT_SECRET: ${{ secrets.BIGCOMMERCE_CLIENT_SECRET }}
      DEFAULT_PRODUCT_ID: ${{ secrets.DEFAULT_PRODUCT_ID }}
      DEFAULT_COMPLEX_PRODUCT_ID: ${{ secrets.DEFAULT_COMPLEX_PRODUCT_ID }}
      PLAYWRIGHT_TEST_BASE_URL: ${{ github.event.deployment_status.target_url }}
      TESTS_LOCALE: ${{ secrets.TESTS_LOCALE }}
      TESTS_FALLBACK_LOCALE: ${{ secrets.TESTS_FALLBACK_LOCALE }}
      TEST_CUSTOMER_ID: ${{ secrets.TEST_CUSTOMER_ID }}
      TEST_CUSTOMER_EMAIL: ${{ secrets.TEST_CUSTOMER_EMAIL }}
      TEST_CUSTOMER_PASSWORD: ${{ secrets.TEST_CUSTOMER_PASSWORD }}

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.deployment_status.target_url }}-${{ github.job }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright Browsers
        working-directory: core
        run: pnpm playwright install --with-deps

      - name: Run Playwright tests
        working-directory: core
        run: pnpm playwright test tests/ui/e2e --project=tests-chromium

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report-ui
          path: core/.tests/test-results
          retention-days: 30
